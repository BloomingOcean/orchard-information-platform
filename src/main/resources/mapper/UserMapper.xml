<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liyang.orchard.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.liyang.orchard.model.User">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="portrait_url" jdbcType="VARCHAR" property="portraitUrl" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="id_number" jdbcType="VARCHAR" property="idNumber" />
    <result column="verified" jdbcType="VARCHAR" property="verified" />
    <result column="membership_deadline" jdbcType="TIMESTAMP" property="membershipDeadline" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="user_address" jdbcType="VARCHAR" property="userAddress" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
  </resultMap>

  <resultMap id="DetailUser" type="com.liyang.orchard.model.user.DetailUser">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="portrait_url" jdbcType="VARCHAR" property="portraitUrl" />
    <result column="user_description" jdbcType="VARCHAR" property="userDescription" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="id_number" jdbcType="VARCHAR" property="idNumber" />
    <result column="verified" jdbcType="VARCHAR" property="verified" />
    <result column="membership_deadline" jdbcType="TIMESTAMP" property="membershipDeadline" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="user_address" jdbcType="VARCHAR" property="userAddress" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
  </resultMap>

  <resultMap id="UpdateUser" type="com.liyang.orchard.model.user.UpdateUser">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="portrait_url" jdbcType="VARCHAR" property="portraitUrl" />
    <result column="user_description" jdbcType="VARCHAR" property="userDescription" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="user_address" jdbcType="VARCHAR" property="userAddress" />
  </resultMap>

  <resultMap id="SimpleUser" type="com.liyang.orchard.model.user.SimpleUser">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="portrait_url" jdbcType="VARCHAR" property="userPortrait" />
    <result column="nickname" jdbcType="VARCHAR" property="userNickname" />
    <result column="user_description" jdbcType="VARCHAR" property="userDescription" />
  </resultMap>

  <resultMap id="AuthoritySysUser" type="com.liyang.orchard.config.shiro.SysUser">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="name" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="permission_code" jdbcType="VARCHAR" property="userPermission" />
    <result column="role_name" jdbcType="VARCHAR" property="userRole" />
  </resultMap>

  <select id="getSimpleUserInfo" resultMap="SimpleUser">
    select user_id,nickname,user_description,portrait_url
    from user
    where user_id=#{userId}
  </select>

  <select id="getDetailUserInfo" resultMap="DetailUser">
    select user_id,portrait_url,nickname,name,id_number,verified,phone,role_id,user_description,user_address,membership_deadline
    from user
    where user_id=#{userId}
  </select>

  <select id="setUserInfo" resultMap="UpdateUser">
    update user
    <set>
        portrait_url=#{updateUser.portraitUrl},nickname=#{updateUser.nickname},
        `name`=#{updateUser.name},phone=#{updateUser.phone},
        user_description=#{updateUser.userDescription},
        user_address=#{updateUser.userAddress},
    </set>
    <where>
      user_id = #{updateUser.userId}
    </where>
  </select>

  <select id="findUserAuthority" resultMap="AuthoritySysUser" >
    SELECT user_id,`password`,`name`,role_name,permission_code FROM `user` INNER JOIN
    (SELECT sr.role_id,role_name,permission_code FROM sys_role_permission srp,sys_role sr,sys_permission sp
     WHERE srp.role_id=sr.role_id AND srp.permission_id=sp.permission_id) AS rp
    ON `user`.role_id=rp.role_id
    WHERE phone=#{userPhone}
  </select>
</mapper>