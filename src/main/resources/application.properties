# 系统版本
sys.version="0.3"

# 端口
server.port=7489

# 使用环境
spring.profiles.active=dev

# 日志配置
logging.level.com.liyang.orchard=debug
#mybatis.configuration.log-impl= org.apache.ibatis.logging.stdout.StdOutImpl

# mybatis开启驼峰
mybatis.configuration.map-underscore-to-camel-case=true

# 404 交给异常处理器处理
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false

# 阿里云AccessKey
alibaba.accessKeyId=LTAI4GBjBVZF5XS8wTrD5jtN
alibaba.accessKeySecret=***********************
alibaba.signName=signName
alibaba.templateCode=templateCode
alibaba.bucketName=files-ly
alibaba.endpoint=oss-cn-guangzhou.aliyuncs.com

# 启用 HTTPS
#server.ssl.enabled=true
#server.ssl.protocol=TLS
#server.ssl.key-store=classpath:ssl.keystore
#server.ssl.key-store-password=liyang

# Druid DATASOURCE
spring.datasource.druid.initialSize=5
spring.datasource.druid.minIdle=5
spring.datasource.druid.maxActive=20
spring.datasource.druid.maxWait=60000
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.testOnReturn=false
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.druid.filters=stat,wall,log4j
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
spring.datasource.druid.useGlobalDataSourceStat=true

# redis
redis.prefix.authCode="portal:authCode:"
redis.prefix.orderId="portal:orderId:"
# 验证码超期时间
redis.key.expire.authCode=60
spring.redis.host=localhost
# Redis数据库索引（默认为0）
spring.redis.database=0
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 配置集群参数前先要配置集群节点(默认状态下是禁用状态，需要修改redis.conf文件)
#spring.redis.cluster.nodes=127.0.0.1:6379
# 连接池最大连接数（使用负值表示没有限制）
#spring.redis.cluster.max-redirects=8
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=3000

# pagehelper配置
# dialect: ①
# 分页插件会自动检测当前的数据库链接，自动选择合适的分页方式（可以不设置）
pagehelper.helper-dialect=mysql
# 上面数据库设置后，下面的设置为true不会改变上面的结果（默认为true）
pagehelper.auto-dialect=true
pagehelper.page-size-zero=false # ②
pagehelper.reasonable=true # ③
# 默认值为 false，该参数对使用 RowBounds 作为分页参数时有效。（一般用不着）
pagehelper.offset-as-page-num=false
# 默认值为 false，RowBounds是否进行count查询（一般用不着）
pagehelper.row-bounds-with-count=false
#params: ④
#support-methods-arguments: 和params配合使用，具体可以看下面的讲解
# 默认值为 false。设置为 true 时，允许在运行时根据多数据源自动识别对应方言的分页
pagehelper.auto-runtime-dialect=false # ⑤
# 与auto-runtime-dialect配合使用
pagehelper.close-conn=true
# 用于控制默认不带 count 查询的方法中，是否执行 count 查询，这里设置为true后，total会为-1
pagehelper.default-count=false
#dialect-alias: ⑥